########################################
## CONFIG | Airflow Configs
########################################
airflow:
  ## if we use legacy 1.10 airflow commands
  legacyCommands: false

  ## configs for the airflow container image
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-version.md
  image:
    repository: earnest/airflow_2
    tag: '2.2.5.3-24ed9a4-linux-amd64'
    # Disable pullSecret if running locally.
    pullSecret: "earnest-dockerhub"

  ## the airflow executor type to use
  executor: KubernetesExecutor

  ## the fernet encryption key (sets `AIRFLOW__CORE__FERNET_KEY`)
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/set-fernet-key.md
  ## [WARNING] change from default value to ensure security
  #SET ON extraenv SECTION
  # fernetKey: ""

  ## the secret_key for flask (sets `AIRFLOW__WEBSERVER__SECRET_KEY`)
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/set-webserver-secret-key.md
  ## [WARNING] change from default value to ensure security
  #SET ON extraenv SECTION
  # webserverSecretKey: "THIS IS UNSAFE!"

  ## environment variables for airflow configs
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-configs.md
  config:
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "False"
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"

    ###################################
    ## COMPONENT | Legacy Airflow configurations (double check)
    ###################################

    AWS_DEFAULT_REGION: us-east-1
    ENVIRONMENT: local
    NEW_RELIC_ENVIRONMENT: ""
    GENERATION: '1'
    BOOTSTRAP_ADMIN_USER: true

    # Airflow Kubernetes Configurations
    # AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT: "300"
    # AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: "180"
    # AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: "{{ .Environment.Values.AIRFLOW_WORKER_IMAGE_REPOSITORY }}"
    # AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: "{{ .Environment.Values.AIRFLOW_WORKER_IMAGE_TAG }}"
    # AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME: data-airflow-dags
    # AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY: Always
    # AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "{{ .Environment.Values.AIRFLOW__KUBERNETES__DELETE_WORKER_PODS }}"
    # AIRFLOW__KUBERNETES__IMAGE_PULL_SECRETS: earnest-dockerhub
    # AIRFLOW__KUBERNETES__DAGS_VOLUME_CLAIM: airflow-dags-pvc
    # AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM: airflow-logs-pvc
    AIRFLOW__KUBERNETES__NAMESPACE: airflow-2
    AIRFLOW__KUBERNETES__RUN_AS_USER: 1000
    AIRFLOW__KUBERNETES_SECRETS__VAULT_TOKEN: "airflow-dags-secrets=vault_token"
    # # Logging
    # AIRFLOW__CORE__REMOTE_LOGGING: False
    # AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER: "s3://{{ .Environment.Values.LOG_S3_BUCKET }}/logs"
    # AIRFLOW__CORE__LOGGING_LEVEL: "{{ .Environment.Values.AIRFLOW_LOGGING_LEVEL }}"
    # # Parallelism
    AIRFLOW__CORE__PARALLELISM: 32
    # AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW__CORE__PARALLELISM: 100
    # # Airflow Webserver
    AIRFLOW__WEBSERVER__BASE_URL: "https://{{ .Environment.Values.AIRFLOW_WEB_HOST }}"
    AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT: 360
    AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT: 360
    # # Airflow conf to restart scheduler every x seconds
    AIRFLOW__SCHEDULER__RUN_DURATION: 43200
    # # Okta Integrations
    # AIRFLOW__WEBSERVER__RBAC: True
    # AIRFLOW__OIDC__VALID_ISSUERS: "{{ .Environment.Values.VALID_ISSUERS }}"
    # AIRFLOW__OIDC__OVERWRITE_REDIRECT_URI: "https://{{ .Environment.Values.AIRFLOW_WEB_HOST }}/authorization-code/callback"
    ## Airflow Core
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: true
    AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT: "300"
    AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: "300"
    ## Amazon
    # AWS_SESSION_TOKEN:
    ##Snowflake
    SNOWFLAKE_TOKEN_GENERATOR_URL: "https://snowflake-token-generator.k8s.data-org.production.earnest.com"

    ##########################################


  ## a list of users to create
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/airflow-users.md
  users:
  - username: admin
    password: admin
    role: Admin
    email: admin@example.com
    firstName: admin
    lastName: admin
  - username: ivan
    password: ivan_air
    role: Admin
    email: ivan@example.com
    firstName: Ivan
    lastName: Pachon
  - username: jesse
    password: jesse_air
    role: Admin
    email: jesse@example.com
    firstName: jesse
    lastName: spencer
  - username: luis
    password: luis_air
    role: Admin
    email: luis@example.com
    firstName: Luis
    lastName: Balbuena

  ## a list airflow connections to create
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-connections.md
  connections: []

  ## a list airflow variables to create
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-variables.md
  variables: []

  ## a list airflow pools to create
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/airflow-pools.md
  pools: []

  ## extra pip packages to install in airflow Pods
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/extra-python-packages.md
  ## [WARNING] this feature is not recommended for production use, see docs
  # check if these packages come with the image if not include them in requirements.txt githubrepo
  extraPipPackages: []

  ## extra environment variables for the airflow Pods
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-environment-variables.md
  extraEnv:
    - name: ENVIRONMENT
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: environment
    - name: VAULT_URL
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: vault_url
    - name: VAULT_PORT
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: vault_port
    - name: VAULT_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: vault_key

    ###################################
    ## COMPONENT | Legacy Airflow extraEnv (double check)
    ###################################
    - name: VAULT_TOKEN
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: vault_token
    - name: AIRFLOW__WEBSERVER__SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: secret_key
    - name: FERNET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: fernet_key
    - name: AIRFLOW__CORE__FERNET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: fernet_key
    - name: AIRFLOW__KUBERNETES_ENVIRONMENT_VARIABLES__AIRFLOW__CORE__FERNET_KEY
      valueFrom:
        secretKeyRef:
          name: airflow-dags-secrets
          key: fernet_key

  ## extra VolumeMounts for the airflow Pods
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
  extraVolumeMounts: []

  ## extra Volumes for the airflow Pods
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
  extraVolumes: []

  ## configs generating the `pod_template.yaml` file for `AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE`
  ## [NOTE] the `dags.gitSync` values will create a git-sync init-container in the pod
  ## [NOTE] the `airflow.extraPipPackages` will NOT be installed
  kubernetesPodTemplate:

    ## the full content of the pod-template file (as a string)
    ## [NOTE] all other `kubernetesPodTemplate.*` are disabled when this is set
    stringOverride: ""

    ## resource requests/limits for the Pod template "base" container
    ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

    ## extra pip packages to install in the Pod template
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/extra-python-packages.md
    ## [WARNING] this feature is not recommended for production use, see docs
    extraPipPackages: []

    ## extra VolumeMounts for the Pod template
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
    extraVolumeMounts: []

    ## extra Volumes for the Pod template
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-persistent-volumes.md
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/mount-files.md
    extraVolumes: []

###################################
## COMPONENT | Airflow Scheduler
###################################
scheduler:
  ## the number of scheduler Pods to run
  replicas: 1

  ## resource requests/limits for the scheduler Pods
  ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

  ## configs for the log-cleanup sidecar of the scheduler
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/monitoring/log-cleanup.md
  logCleanup:
    enabled: false
    retentionMinutes: 21600

  ## configs for the scheduler Pods' liveness probe
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/monitoring/scheduler-liveness-probe.md
  livenessProbe:
    enabled: false

    ## configs for an additional check that ensures tasks are being created by the scheduler
    ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/monitoring/scheduler-liveness-probe.md
    taskCreationCheck:
      enabled: false
      thresholdSeconds: 300

###################################
## COMPONENT | Airflow Webserver
###################################
web:
  ## the number of web Pods to run
  replicas: 1

  livenessProbe:
    enabled: false

  readinessProbe:
    enabled: false

  ## configs for the Service of the web Pods
  service:
    type: ClusterIP
    externalPort: 8080

  ## configs generating the `webserver_config.py` file
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/configuration/airflow-configs.md#webserver_configpy
  webserverConfig:
    ## the full content of the `webserver_config.py` file (as a string)
    stringOverride: |-
      from airflow import configuration as conf
      from flask_appbuilder.security.manager import AUTH_DB

      # the SQLAlchemy connection string
      SQLALCHEMY_DATABASE_URI = conf.get('core', 'SQL_ALCHEMY_CONN')

      # use embedded DB for auth
      AUTH_TYPE = AUTH_DB
    ## the name of a Secret containing a `webserver_config.py` key
    existingSecret: ""

  ## resource requests/limits for the web Pods
  ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
  resources:
    limits:
      cpu: 500m
      memory: 2.5Gi
    requests:
      cpu: 250m
      memory: 2.5Gi

###################################
## COMPONENT | Airflow Workers
###################################
workers:
  ## if the airflow workers StatefulSet should be deployed
  enabled: false

###################################
## COMPONENT | Triggerer
###################################
triggerer:
  ## if the airflow triggerer should be deployed
  enabled: true

  ## the number of triggerer Pods to run
  replicas: 1

  ## resource requests/limits for the triggerer Pods
  ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
  resources: {}

  ## maximum number of triggers each triggerer will run at once (sets `AIRFLOW__TRIGGERER__DEFAULT_CAPACITY`)
  capacity: 1000

###################################
## COMPONENT | Flower
###################################
flower:
  ## if the airflow flower UI should be deployed
  enabled: false

###################################
## CONFIG | Airflow Logs
###################################
logs:
  ## NOTE: this is the default value
  path: /opt/airflow/logs

  persistence:
    enabled: true

    ## the name of your existing PersistentVolumeClaim
    #existingClaim: airflow-logs-pvc
    storageClass: hostpath

    ## WARNING: as multiple pods will write logs, this MUST be ReadWriteMany
    accessMode: ReadWriteMany

###################################
## CONFIG | Airflow DAGs
###################################
dags:
  ## the airflow dags folder
  path: /opt/airflow/dags

  ## configs for the dags PVC
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/dags/load-dag-definitions.md
  persistence:
    enabled: true

    existingClaim: dags-pvc

    ## NOTE: as multiple Pods read the DAGs concurrently this MUST be ReadOnlyMany or ReadWriteMany
    accessMode: ReadWriteMany

###################################
## CONFIG | Kubernetes Ingress
###################################
ingress:
  ## if we should deploy Ingress resources
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/ingress.md
  enabled: true
  apiVersion: networking.k8s.io/v1
  web:
    annotations:
      kubernetes.io/ingress.class: traefik
      ingress.kubernetes.io/auth-type: forward
      ingress.kubernetes.io/auth-url: http://traefik-forward-auth.kube-system.svc.cluster.local
      ingress.kubernetes.io/auth-response-headers: X-Forwarded-User
    host: airflow2.k8s.data-org.staging.earnest.com

###################################
## CONFIG | Kubernetes ServiceAccount
###################################
serviceAccount:
  ## if a Kubernetes ServiceAccount is created
  create: true

  ## the name of the ServiceAccount
  name: ""

  ## annotations for the ServiceAccount
  annotations: {}

###################################
## CONFIG | Kubernetes Extra Manifests
###################################

## a list of extra Kubernetes manifests that will be deployed alongside the chart
## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/kubernetes/extra-manifests.md
extraManifests: []

###################################
## DATABASE | PgBouncer
###################################
pgbouncer:
  ## if the pgbouncer Deployment is created
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/pgbouncer.md
  enabled: true

  ## resource requests/limits for the pgbouncer Pods
  ## [SPEC] https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
  resources: {}

  ## sets pgbouncer config: `auth_type`
  authType: md5

###################################
## DATABASE | Embedded Postgres
###################################
postgresql:
  ## if the `stable/postgresql` chart is used
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/embedded-database.md
  ## [WARNING] the embedded Postgres is NOT SUITABLE for production deployments of Airflow
  ## [WARNING] consider using an external database with `externalDatabase.*`
  enabled: true

  ## configs for the PVC of postgresql
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi

###################################
## DATABASE | External Database
###################################
externalDatabase:
  ## the type of external database
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/external-database.md
  type: postgres

###################################
## DATABASE | Embedded Redis
###################################
redis:
  ## if the `stable/redis` chart is used
  enabled: false

###################################
## DATABASE | External Redis
###################################
externalRedis:
  ## the host of the external redis
  ## [FAQ] https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/database/external-redis.md
  host: localhost
